Ребята ДЗ до понедельника.
1.	Сделать конспект по всем занятам по HTML&CSS
		Пример: Тег <div> в HTML — это блочный элемент, используемый для группировки и 
		        структурирования контента на веб-страницах для целей стилизации (с помощью CSS) 
				или как контейнер для динамического содержимого (с помощью JavaScript). 
				Элемент <div> не имеет специфического смысла или семантической нагрузки, 
				что делает его универсальным инструментом для создания макетов страницы.
				
				Основные характеристики:
					Блочный элемент: По умолчанию, <div> занимает всю доступную ширину контейнера и создает новую строку до и после себя в документе.
					Не имеет визуального отображения: Без стилей CSS <div> не имеет видимого представления, за исключением того, как он влияет на разметку (например, создание новых строк).
					Универсальность: Используется для создания сеток, разделов на странице, для обертывания других элементов с целью дальнейшей стилизации или применения к ним скриптов.
					Атрибуты:
						Тег <div> может использовать глобальные атрибуты HTML, такие как class, id, style, title, и data-* атрибуты. Сам по себе <div> не имеет специфичных только для него атрибутов.
2. Для занятий по CSS, display: inline, display: block и display: flex:

	a. Задача на display: block
		Цель: Показать, как элементы с display: block занимают всю доступную ширину и располагаются друг под другом.

		Задание: Создайте веб-страницу с несколькими <div> элементами, каждый из которых содержит текст или изображение. 
				 Примените к этим элементам display: block и покажите, что каждый <div> начинается с новой строки и растягивается на всю ширину контейнера.

	b. Задача на display: inline
	   Цель: Демонстрация того, как элементы с display: inline располагаются в одной строке и занимают ширину в соответствии с содержимым.
	   Задание: Создайте серию <span> или <a> элементов с текстом внутри. Установите для этих элементов display: inline. 
	   Иллюстрируйте, как все элементы выстраиваются в одну линию, не переносясь на новую строку до достижения конца контейнера.
	c. Задача на display: flex
	   Цель: Показать гибкость расположения элементов с использованием Flexbox, включая выравнивание и распределение пространства.
	   Задание: Создайте контейнер <div> с несколькими дочерними <div>, содержащими текст или изображения. 
	   Примените к родительскому <div> display: flex. Экспериментируйте с свойствами justify-content, align-items для изменения положения дочерних элементов в контейнере.